syntax = "proto3";

package viamlabs.service.speech.v1;

import "google/api/annotations.proto";

service SpeechService {
  rpc Say(SayRequest) returns (SayResponse) {
    option (google.api.http) = {
      post: "/viamlabs/api/v1/service/speech/{name}/say"
    };
  }

  rpc Completion(CompletionRequest) returns (CompletionResponse) {
    option (google.api.http) = {
      post: "/viamlabs/api/v1/service/speech/{name}/completion"
    };
  }

  rpc GetCommands(GetCommandsRequest) returns (GetCommandsResponse) {
    option (google.api.http) = {
      post: "/viamlabs/api/v1/service/speech/{name}/get_commands"
    };
  }
  
  rpc ListenTrigger(ListenTriggerRequest) returns (ListenTriggerResponse) {
    option (google.api.http) = {
      post: "/viamlabs/api/v1/service/speech/{name}/listen_trigger"
    };
  }

  rpc IsSpeaking(IsSpeakingRequest) returns (IsSpeakingResponse) {
    option (google.api.http) = {
      post: "/viamlabs/api/v1/service/speech/{name}/is_speaking"
    };
  }
}

message SayRequest {
  string name = 1;
  string text = 2;
  bool blocking = 3;
}

message SayResponse {
  string text = 1;
}

message CompletionRequest {
  string name = 1;
  string text = 2;
  bool blocking = 3;
}

message CompletionResponse {
  string text = 1;
}

message GetCommandsRequest {
  string name = 1;
  int32 number = 2;
}

message GetCommandsResponse {
  repeated string commands = 1;
}

message ListenTriggerRequest {
  string name = 1;
  string type = 2;
}

message ListenTriggerResponse {
  string text = 1;
}

message IsSpeakingRequest {
  string name = 1;
}

message IsSpeakingResponse {
  bool status = 1;
}
