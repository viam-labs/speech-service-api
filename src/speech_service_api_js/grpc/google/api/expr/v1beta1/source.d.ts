/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: google/api/expr/v1beta1/source.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export declare namespace google.api.expr.v1beta1 {
    class SourceInfo extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            location?: string;
            line_offsets?: number[];
            positions?: Map<number, number>;
        });
        get location(): string;
        set location(value: string);
        get line_offsets(): number[];
        set line_offsets(value: number[]);
        get positions(): Map<number, number>;
        set positions(value: Map<number, number>);
        static fromObject(data: {
            location?: string;
            line_offsets?: number[];
            positions?: {
                [key: number]: number;
            };
        }): SourceInfo;
        toObject(): {
            location?: string | undefined;
            line_offsets?: number[] | undefined;
            positions?: {
                [key: number]: number;
            } | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SourceInfo;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): SourceInfo;
    }
    class SourcePosition extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            location?: string;
            offset?: number;
            line?: number;
            column?: number;
        });
        get location(): string;
        set location(value: string);
        get offset(): number;
        set offset(value: number);
        get line(): number;
        set line(value: number);
        get column(): number;
        set column(value: number);
        static fromObject(data: {
            location?: string;
            offset?: number;
            line?: number;
            column?: number;
        }): SourcePosition;
        toObject(): {
            location?: string | undefined;
            offset?: number | undefined;
            line?: number | undefined;
            column?: number | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SourcePosition;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): SourcePosition;
    }
}
