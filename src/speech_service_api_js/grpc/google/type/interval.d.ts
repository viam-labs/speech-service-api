/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: google/type/interval.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../protobuf/timestamp";
import * as pb_1 from "google-protobuf";
export declare namespace google.type {
    class Interval extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            start_time?: dependency_1.google.protobuf.Timestamp;
            end_time?: dependency_1.google.protobuf.Timestamp;
        });
        get start_time(): dependency_1.google.protobuf.Timestamp;
        set start_time(value: dependency_1.google.protobuf.Timestamp);
        get has_start_time(): boolean;
        get end_time(): dependency_1.google.protobuf.Timestamp;
        set end_time(value: dependency_1.google.protobuf.Timestamp);
        get has_end_time(): boolean;
        static fromObject(data: {
            start_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            end_time?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): Interval;
        toObject(): {
            start_time?: {
                seconds?: number | undefined;
                nanos?: number | undefined;
            } | undefined;
            end_time?: {
                seconds?: number | undefined;
                nanos?: number | undefined;
            } | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Interval;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): Interval;
    }
}
