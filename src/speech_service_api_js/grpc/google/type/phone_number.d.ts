/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: google/type/phone_number.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export declare namespace google.type {
    class PhoneNumber extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            extension?: string;
        } & (({
            e164_number?: string;
            short_code?: never;
        } | {
            e164_number?: never;
            short_code?: PhoneNumber.ShortCode;
        }))));
        get e164_number(): string;
        set e164_number(value: string);
        get has_e164_number(): boolean;
        get short_code(): PhoneNumber.ShortCode;
        set short_code(value: PhoneNumber.ShortCode);
        get has_short_code(): boolean;
        get extension(): string;
        set extension(value: string);
        get kind(): "none" | "e164_number" | "short_code" | undefined;
        static fromObject(data: {
            e164_number?: string;
            short_code?: ReturnType<typeof PhoneNumber.ShortCode.prototype.toObject>;
            extension?: string;
        }): PhoneNumber;
        toObject(): {
            e164_number?: string | undefined;
            short_code?: {
                region_code?: string | undefined;
                number?: string | undefined;
            } | undefined;
            extension?: string | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PhoneNumber;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): PhoneNumber;
    }
    namespace PhoneNumber {
        class ShortCode extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                region_code?: string;
                number?: string;
            });
            get region_code(): string;
            set region_code(value: string);
            get number(): string;
            set number(value: string);
            static fromObject(data: {
                region_code?: string;
                number?: string;
            }): ShortCode;
            toObject(): {
                region_code?: string | undefined;
                number?: string | undefined;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ShortCode;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): ShortCode;
        }
    }
}
