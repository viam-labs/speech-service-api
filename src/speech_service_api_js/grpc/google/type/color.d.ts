/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: google/type/color.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../protobuf/wrappers";
import * as pb_1 from "google-protobuf";
export declare namespace google.type {
    class Color extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            red?: number;
            green?: number;
            blue?: number;
            alpha?: dependency_1.google.protobuf.FloatValue;
        });
        get red(): number;
        set red(value: number);
        get green(): number;
        set green(value: number);
        get blue(): number;
        set blue(value: number);
        get alpha(): dependency_1.google.protobuf.FloatValue;
        set alpha(value: dependency_1.google.protobuf.FloatValue);
        get has_alpha(): boolean;
        static fromObject(data: {
            red?: number;
            green?: number;
            blue?: number;
            alpha?: ReturnType<typeof dependency_1.google.protobuf.FloatValue.prototype.toObject>;
        }): Color;
        toObject(): {
            red?: number | undefined;
            green?: number | undefined;
            blue?: number | undefined;
            alpha?: {
                value?: number | undefined;
            } | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Color;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): Color;
    }
}
