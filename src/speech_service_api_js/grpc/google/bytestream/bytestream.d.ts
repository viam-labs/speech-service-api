/// <reference types="node" />
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: google/bytestream/bytestream.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export declare namespace google.bytestream {
    export class ReadRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            resource_name?: string;
            read_offset?: number;
            read_limit?: number;
        });
        get resource_name(): string;
        set resource_name(value: string);
        get read_offset(): number;
        set read_offset(value: number);
        get read_limit(): number;
        set read_limit(value: number);
        static fromObject(data: {
            resource_name?: string;
            read_offset?: number;
            read_limit?: number;
        }): ReadRequest;
        toObject(): {
            resource_name?: string | undefined;
            read_offset?: number | undefined;
            read_limit?: number | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReadRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ReadRequest;
    }
    export class ReadResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            data?: Uint8Array;
        });
        get data(): Uint8Array;
        set data(value: Uint8Array);
        static fromObject(data: {
            data?: Uint8Array;
        }): ReadResponse;
        toObject(): {
            data?: Uint8Array | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ReadResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ReadResponse;
    }
    export class WriteRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            resource_name?: string;
            write_offset?: number;
            finish_write?: boolean;
            data?: Uint8Array;
        });
        get resource_name(): string;
        set resource_name(value: string);
        get write_offset(): number;
        set write_offset(value: number);
        get finish_write(): boolean;
        set finish_write(value: boolean);
        get data(): Uint8Array;
        set data(value: Uint8Array);
        static fromObject(data: {
            resource_name?: string;
            write_offset?: number;
            finish_write?: boolean;
            data?: Uint8Array;
        }): WriteRequest;
        toObject(): {
            resource_name?: string | undefined;
            write_offset?: number | undefined;
            finish_write?: boolean | undefined;
            data?: Uint8Array | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): WriteRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): WriteRequest;
    }
    export class WriteResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            committed_size?: number;
        });
        get committed_size(): number;
        set committed_size(value: number);
        static fromObject(data: {
            committed_size?: number;
        }): WriteResponse;
        toObject(): {
            committed_size?: number | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): WriteResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): WriteResponse;
    }
    export class QueryWriteStatusRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            resource_name?: string;
        });
        get resource_name(): string;
        set resource_name(value: string);
        static fromObject(data: {
            resource_name?: string;
        }): QueryWriteStatusRequest;
        toObject(): {
            resource_name?: string | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryWriteStatusRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): QueryWriteStatusRequest;
    }
    export class QueryWriteStatusResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            committed_size?: number;
            complete?: boolean;
        });
        get committed_size(): number;
        set committed_size(value: number);
        get complete(): boolean;
        set complete(value: boolean);
        static fromObject(data: {
            committed_size?: number;
            complete?: boolean;
        }): QueryWriteStatusResponse;
        toObject(): {
            committed_size?: number | undefined;
            complete?: boolean | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryWriteStatusResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): QueryWriteStatusResponse;
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    export abstract class UnimplementedByteStreamService {
        static definition: {
            Read: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: ReadRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => ReadRequest;
                responseSerialize: (message: ReadResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => ReadResponse;
            };
            Write: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: WriteRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => WriteRequest;
                responseSerialize: (message: WriteResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => WriteResponse;
            };
            QueryWriteStatus: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: QueryWriteStatusRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => QueryWriteStatusRequest;
                responseSerialize: (message: QueryWriteStatusResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => QueryWriteStatusResponse;
            };
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract Read(call: grpc_1.ServerWritableStream<ReadRequest, ReadResponse>): void;
        abstract Write(call: grpc_1.ServerReadableStream<WriteRequest, WriteResponse>, callback: grpc_1.sendUnaryData<WriteResponse>): void;
        abstract QueryWriteStatus(call: grpc_1.ServerUnaryCall<QueryWriteStatusRequest, QueryWriteStatusResponse>, callback: grpc_1.sendUnaryData<QueryWriteStatusResponse>): void;
    }
    const ByteStreamClient_base: grpc_1.ServiceClientConstructor;
    export class ByteStreamClient extends ByteStreamClient_base {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>);
        Read: GrpcStreamServiceInterface<ReadRequest, ReadResponse>;
        Write: GrpWritableServiceInterface<WriteRequest, WriteResponse>;
        QueryWriteStatus: GrpcUnaryServiceInterface<QueryWriteStatusRequest, QueryWriteStatusResponse>;
    }
    export {};
}
