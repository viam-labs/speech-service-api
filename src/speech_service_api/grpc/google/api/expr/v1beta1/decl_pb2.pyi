"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2019 Google LLC.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import builtins
import collections.abc
import google.api.expr.v1beta1.expr_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Decl(google.protobuf.message.Message):
    """A declaration."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DOC_FIELD_NUMBER: builtins.int
    IDENT_FIELD_NUMBER: builtins.int
    FUNCTION_FIELD_NUMBER: builtins.int
    id: builtins.int
    """The id of the declaration."""
    name: builtins.str
    """The name of the declaration."""
    doc: builtins.str
    """The documentation string for the declaration."""
    @property
    def ident(self) -> global___IdentDecl:
        """An identifier declaration."""
    @property
    def function(self) -> global___FunctionDecl:
        """A function declaration."""
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        name: builtins.str = ...,
        doc: builtins.str = ...,
        ident: global___IdentDecl | None = ...,
        function: global___FunctionDecl | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["function", b"function", "ident", b"ident", "kind", b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["doc", b"doc", "function", b"function", "id", b"id", "ident", b"ident", "kind", b"kind", "name", b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["kind", b"kind"]) -> typing_extensions.Literal["ident", "function"] | None: ...

global___Decl = Decl

@typing_extensions.final
class DeclType(google.protobuf.message.Message):
    """The declared type of a variable.

    Extends runtime type values with extra information used for type checking
    and dispatching.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    TYPE_PARAMS_FIELD_NUMBER: builtins.int
    id: builtins.int
    """The expression id of the declared type, if applicable."""
    type: builtins.str
    """The type name, e.g. 'int', 'my.type.Type' or 'T'"""
    @property
    def type_params(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeclType]:
        """An ordered list of type parameters, e.g. `<string, int>`.
        Only applies to a subset of types, e.g. `map`, `list`.
        """
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        type: builtins.str = ...,
        type_params: collections.abc.Iterable[global___DeclType] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "type", b"type", "type_params", b"type_params"]) -> None: ...

global___DeclType = DeclType

@typing_extensions.final
class IdentDecl(google.protobuf.message.Message):
    """An identifier declaration."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    @property
    def type(self) -> global___DeclType:
        """Optional type of the identifier."""
    @property
    def value(self) -> google.api.expr.v1beta1.expr_pb2.Expr:
        """Optional value of the identifier."""
    def __init__(
        self,
        *,
        type: global___DeclType | None = ...,
        value: google.api.expr.v1beta1.expr_pb2.Expr | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["type", b"type", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["type", b"type", "value", b"value"]) -> None: ...

global___IdentDecl = IdentDecl

@typing_extensions.final
class FunctionDecl(google.protobuf.message.Message):
    """A function declaration."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ARGS_FIELD_NUMBER: builtins.int
    RETURN_TYPE_FIELD_NUMBER: builtins.int
    RECEIVER_FUNCTION_FIELD_NUMBER: builtins.int
    @property
    def args(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___IdentDecl]:
        """The function arguments."""
    @property
    def return_type(self) -> global___DeclType:
        """Optional declared return type."""
    receiver_function: builtins.bool
    """If the first argument of the function is the receiver."""
    def __init__(
        self,
        *,
        args: collections.abc.Iterable[global___IdentDecl] | None = ...,
        return_type: global___DeclType | None = ...,
        receiver_function: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["return_type", b"return_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["args", b"args", "receiver_function", b"receiver_function", "return_type", b"return_type"]) -> None: ...

global___FunctionDecl = FunctionDecl
